# Javascript Node CircleCI configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/openjdk:11.0.2-jdk-node

orbs:
  win: circleci/windows@2.2.0 # The Windows orb give you everything you need to start using the Windows executor.

jobs:
  test:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn --ignore-scripts
      - run: yarn build

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Run mocha
      - run:
          name: test
          command: yarn test --reporter mocha-junit-reporter --reporter-option mochaFile=./test-results/mocha/test-results.xml
          when: always

      # Run eslint
      - run:
          name: eslint
          command: yarn lint --format junit --output-file ./test-results/eslint/eslint.xml
          when: always

      # Upload results
      - store_test_results:
          path: ./test-results

      - store_artifacts: # upload test coverage as artifact
          path: ./test-coverage

      - run: bash <(curl -s https://codecov.io/bash)

      - persist_to_workspace:
          root: ~/repo
          paths: .

  test-windows:
    executor:
      name: win/default # executor type
      size: "medium"

    steps:
      # Commands are run in a Windows virtual machine environment
      - checkout
      - run:
          name: "Install sfdx cli"
          shell: cmd.exe
          command: npm install -g sfdx-cli

      - run:
          name: "Install plugin"
          shell: cmd.exe
          command: echo y | sfdx plugins:install --force @salesforce/sfdx-scanner

      - run:
          name: "List rules"
          command: sfdx scanner:rule:list

      - run:
          name: "Run rules"
          command: sfdx scanner:run --target .\test\code-samples\vulnerable\classes  --format table

  publish-latest:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Authenticate with npm registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" >> ~/repo/.npmrc

      - run:
          name: Publish a public package with the tag "latest"
          command: npm publish --public --tag latest

workflows:
  version: 2.1
  test-publish:
    jobs:
      - test:
          filters:
            # We want this to run against all tags and branches. Branches are inclusive by default, so we don't need to
            # specify anything. But tags are exclusive by default, so we need to specify that all tags should be included.
            tags:
              only: /.*/
      - test-windows:
          filters:
            # We want this to run against all tags and branches. Branches are inclusive by default, so we don't need to
            # specify anything. But tags are exclusive by default, so we need to specify that all tags should be included.
            tags:
              only: /.*/
      - publish-latest:
          # This job should only run after 'test' finishes successfully.
          requires:
            - test
            - test-windows
          filters:
            # We never want to publish branches, so we need to explicitly ignore all of them.
            branches:
              ignore: /.*/
            # We want to publish any tags that are formatted vXXXX, since that's our semantic versioning syntax.
            tags:
              only:
                /^v.*/
