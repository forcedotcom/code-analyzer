name: run-tests
on:
  workflow_call:
    inputs:
      node-matrix:
        description: "An array of node versions against which the tests should be run"
        required: false
        type: string
        default: "[{version: 'lts/*', artifact: 'lts'}]"
      target-branch:
        description: "What branch should be checked out?"
        required: false
        type: string
        # If no target branch is specified, just use the one we'd use normally.
        default: ${{ github.sha }}

jobs:
  unit-tests:
    strategy:
      # By default, if any job in a matrix fails, all other jobs are immediately canceled. This makes the jobs run
      # to completion instead.
      fail-fast: false
      matrix:
        node: ${{ fromJson(inputs.node-matrix) }}
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Check out the code
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target-branch }}
      # Make sure we're on the right version on Node
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node.version }}
      - run: yarn
      - run: yarn build
      - run: yarn test
        id: jest-tests
      - run: yarn lint
      - name: Upload full artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: tests-${{ runner.os }}-${{ matrix.node.artifact }}
          path: |
            ./reports
            ./coverage
  # For now, the smoke tests are no-ops, so the job doesn't have to do anything exciting.
  # When smoke-tests stop being no-ops, we'll need a build-dependencies step to create a tarball artifact, and so forth.
  # We'll be able to use the v4 workflow as a template.
  smoke-tests:
    strategy:
      # By default, if any job in a matrix fails, all other jobs are automatically cancelled. This makes the jobs run
      # to completion instead.
      fail-fast: false
      matrix:
        node: ${{ fromJson(inputs.node-matrix) }}
        os: [{vm: ubuntu-latest, exe: .sh}, {vm: macos-latest, exe: .sh}, {vm: windows-latest, exe: .cmd}]
    runs-on: ${{ matrix.os.vm }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target-branch }}
      - run: smoke-tests/smoke-test${{ matrix.os.exe }} sf

