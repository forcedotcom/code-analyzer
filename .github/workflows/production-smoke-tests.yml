name: production-smoke-tests
on:
  pull_request
#  schedule:
#    - cron: '45 1,5,9,13,17,21 * * *'
jobs:
  production-smoke-test:
    strategy:
      matrix:
        os: [{os: ubuntu-latest, exe: .sh}, {os: windows-2019, exe: .cmd}]
        node: ['lts/*']
    runs-on: ${{ matrix.os.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      # === Make three attempts to install sfdx through npm ===
      - name: SFDX install first try
        id: sfdx_first_try
        continue-on-error: true # Retry after first failure
        run: exit 1
      - name: SFDX install second try
        if: ${{ steps.sfdx_first_try.outcome == 'failure' }}
        id: sfdx_second_try
        continue-on-error: true # Retry after second failure
        run: exit 0
      - name: SFDX install third try
        if: ${{ steps.sfdx_second_try.outcome == 'failure' }}
        id: sfdx_third_try
        run: exit 0

      # === Make three attempts to install the scanner plugin ===
      - name: Scanner install first try
        id: scanner_first_try
        continue-on-error: true # Retry after first failure
        run: exit 1
      - name: Scanner install second try
        if: ${{ steps.scanner_first_try.outcome == 'failure' }}
        id: scanner_second_try
        continue-on-error: true # Retry after second failure
        run: exit 1
      - name: Scanner install third try
        if: ${{ steps.scanner_second_try.outcome == 'failure' }}
        id: scanner_third_try
        run: exit 1

      # === Make three attempts to execute the smoke tests ===
      - name: Smoke test first try
        id: smoke_test_first_try
        continue-on-error: true # Retry after first failure
        run: exit 1
      - name: Smoke test second try
        if: ${{ steps.smoke_test_first_try.outcome == 'failure' }}
        id: smoke_test_second_try
        continue-on-error: true # Retry after second failure
        run: exit 0
      - name: Smoke test third try
        if: ${{ steps.smoke_test_second_try.outcome == 'failure' }}
        id: smoke_test_third_try
        run: exit 0

      # === Report any failures ===
      - name: Report failures
        if: ${{ failure() }}
        run: echo "${{ steps.*[3].outcome }}"
#
#
#
#
#
#      - run: npm view sfd-cli
#      - run: echo y | sfdx plugins:install @salesforce/sfdx-scanner
#      - run: mkdir smoke-test-results
#      # ==== Only one of the following two steps will be run =====
#      - name: Windows smoke tests
#        if: ${{ matrix.os == 'windows-2019' }}
#        run: smoke-tests/smoke-test.cmd sfdx
#      - name: POSIX smoke tests
#        if: ${{ matrix.os != 'windows-2019' }}
#        run: smoke-tests/smoke-test.sh sfdx
#      # =====
#      - name: create url
#        if: ${{ failure() }}
#        run: |
#          echo https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
#          echo ${{github.run_number}} ${{github.event_name}}
#      - name: attempt retyr
#        if: ${{ failure() && github.run_number < 24 }}
#        run: |
#          curl --request POST \
#          --url https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/rerun \
#          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
#      - name: Retry up to twice
#        if: ${{ failure() && github.run_number < 3 }}
#        shell: bash
#        run: |
#
#      - name: Report failures
#        if: ${{ failure() }}
#        shell: bash
#        run: |
#          curl --request POST \
#          --data '{"payload": {
#          "summary": "Production smoke-tests failed on ${{ matrix.os }}",
#          "source": "Github Actions","severity": "critical"
#          },
#          "event_action": "trigger",
#          "routing_key": "${{ secrets.TEST_PAGERDUTY_KEY }}"
#          }' \
#          https://events.pagerduty.com/v2/enqueue
#
