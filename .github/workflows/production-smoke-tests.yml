name: production-smoke-tests
on:
  pull_request
#  schedule:
#    - cron: '45 1,5,9,13,17,21 * * *'
jobs:
  production-smoke-test:
    strategy:
      fail-fast: false
      matrix:
        os: [{vm: ubuntu-latest, exe: .sh}, {vm: windows-2019, exe: .cmd}]
        node: ['lts/*']
    runs-on: ${{ matrix.os.vm }}
    steps:
      # === Setup. We need to get the code, set up nodejs, and create the results directory. ===
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - run: mkdir smoke-test-results
      # === Make three attempts to install sfdx through npm ===
      - name: Install sfdx
        id: sfdx_install
        # Sleep for 5 seconds between attempts, since it's possible that problems are network-related.
        run: npm install -g sfdx-cli || (sleep 5 && npm install -g sfdx-cli) || (sleep 5 && npm install -g sfdx-cli) || exit 1

      # === Make three attempts to install the scanner plugin ===
      - name: Install scanner plugin
        id: scanner_install
        # Sleep for 5 seconds between attempts, since it's possible that problems are network-related.
        run: sfdx plugins:install @salesforce/sfdx-scanner || (sleep 5 && sfdx plugins:install @salesforce/sfdx-scanner) || (sleep 5 && sfdx plugins:install @salesforce/sfdx-scanner) || exit 1

      # === Make three attempts to execute the smoke tests ===
      - name: Run smoke tests
        id: smoke_tests
        # Sleep for 5 seconds between attempts, since it's possible that problems are network-related.
        run: smoke-tests/smoke-test${{ matrix.os.exe }} sfdx || (sleep 5 && smoke-tests/smoke-test${{ matrix.os.exe }} sfdx) || (sleep 5 && smoke-tests/smoke-test${{ matrix.os.exe }} sfdx) || exit 1

      # === Upload the results as an artifact ===
      - name: Upload smoke-test-results folder as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: smoke-test-results-${{ runner.os }}
          path: smoke-test-results

      # === Report any failures ===
      - name: Report failures
        if: ${{ failure() }}
        shell: bash
        env:
          SFDX_STATUS: ${{ steps.sfdx_install.outcome == 'success' }}
          SCANNER_STATUS: ${{ steps.scanner_install.outcome == 'success' }}
          SMOKE_TEST_STATUS: ${{ steps.smoke_test.outcome == 'success' }}
          # A link to this run
          RUN_LINK: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          curl --request POST \
          --data '{"payload": {
            "summary": "Production heartbeat script failed on ${{ runner.os }}",
            "source": "Github Actions",
            "severity": "critical",
            "custom_details": "SFDX install: ${{ steps.sfdx_install.outcome }}. Scanner install: ${{ steps.scanner_install.outcome }}. Smoke tests: ${{ steps.smoke_test.outcome }}"
          },
          "links": [{
            "href": "${{ env.RUN_LINK }}",
            "text": "Link to action execution"
          }],
          "event_action": "trigger",
          "routing_key": "${{ secrets.TEST_PAGERDUTY_KEY }}"
          }' \
          https://events.pagerduty.com/v2/enqueue
